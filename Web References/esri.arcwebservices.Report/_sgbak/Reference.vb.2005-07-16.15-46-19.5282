'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.573
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.573.
'
Namespace esri.arcwebservices.Report
    
    '<remarks/>
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="IReport", [Namespace]:="v2"),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(SimplePoint)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(Geometry)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(ThematicVariableInfo)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(StandardGeography)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(RowData)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(FieldDesc)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(KeyValue))>  _
    Public Class Report
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        '<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "http://arcweb.esri.com/services/v2/Report"
        End Sub
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("getVersion", RequestNamespace:="v2", ResponseNamespace:="v2")>  _
        Public Function getVersion() As <System.Xml.Serialization.SoapElementAttribute("Result")> String
            Dim results() As Object = Me.Invoke("getVersion", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '<remarks/>
        Public Function BegingetVersion(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getVersion", New Object(-1) {}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndgetVersion(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("getTables", RequestNamespace:="v2", ResponseNamespace:="v2")>  _
        Public Function getTables(ByVal database As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> String()
            Dim results() As Object = Me.Invoke("getTables", New Object() {database})
            Return CType(results(0),String())
        End Function
        
        '<remarks/>
        Public Function BegingetTables(ByVal database As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getTables", New Object() {database}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndgetTables(ByVal asyncResult As System.IAsyncResult) As String()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String())
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("getAvailableFieldNames", RequestNamespace:="v2", ResponseNamespace:="v2")>  _
        Public Function getAvailableFieldNames(ByVal reportOptions As ReportOptions) As <System.Xml.Serialization.SoapElementAttribute("Result")> FieldDesc()
            Dim results() As Object = Me.Invoke("getAvailableFieldNames", New Object() {reportOptions})
            Return CType(results(0),FieldDesc())
        End Function
        
        '<remarks/>
        Public Function BegingetAvailableFieldNames(ByVal reportOptions As ReportOptions, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getAvailableFieldNames", New Object() {reportOptions}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndgetAvailableFieldNames(ByVal asyncResult As System.IAsyncResult) As FieldDesc()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),FieldDesc())
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("getDatabases", RequestNamespace:="v2", ResponseNamespace:="v2")>  _
        Public Function getDatabases() As <System.Xml.Serialization.SoapElementAttribute("Result")> String()
            Dim results() As Object = Me.Invoke("getDatabases", New Object(-1) {})
            Return CType(results(0),String())
        End Function
        
        '<remarks/>
        Public Function BegingetDatabases(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getDatabases", New Object(-1) {}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndgetDatabases(ByVal asyncResult As System.IAsyncResult) As String()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String())
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("getGeographyIds", RequestNamespace:="v2", ResponseNamespace:="v2")>  _
        Public Function getGeographyIds(ByVal geographyIdOptions As GeographyIdOptions) As <System.Xml.Serialization.SoapElementAttribute("Result")> ResultSet
            Dim results() As Object = Me.Invoke("getGeographyIds", New Object() {geographyIdOptions})
            Return CType(results(0),ResultSet)
        End Function
        
        '<remarks/>
        Public Function BegingetGeographyIds(ByVal geographyIdOptions As GeographyIdOptions, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getGeographyIds", New Object() {geographyIdOptions}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndgetGeographyIds(ByVal asyncResult As System.IAsyncResult) As ResultSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),ResultSet)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("getStandardGeographyReport", RequestNamespace:="v2", ResponseNamespace:="v2")>  _
        Public Function getStandardGeographyReport(ByVal standardGeographies() As StandardGeography, ByVal reportOptions As ReportOptions, ByVal token As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> ReportInfo
            Dim results() As Object = Me.Invoke("getStandardGeographyReport", New Object() {standardGeographies, reportOptions, token})
            Return CType(results(0),ReportInfo)
        End Function
        
        '<remarks/>
        Public Function BegingetStandardGeographyReport(ByVal standardGeographies() As StandardGeography, ByVal reportOptions As ReportOptions, ByVal token As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getStandardGeographyReport", New Object() {standardGeographies, reportOptions, token}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndgetStandardGeographyReport(ByVal asyncResult As System.IAsyncResult) As ReportInfo
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),ReportInfo)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("getReportHeaderKeys", RequestNamespace:="v2", ResponseNamespace:="v2")>  _
        Public Function getReportHeaderKeys(ByVal methodName As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> KeyValue()
            Dim results() As Object = Me.Invoke("getReportHeaderKeys", New Object() {methodName})
            Return CType(results(0),KeyValue())
        End Function
        
        '<remarks/>
        Public Function BegingetReportHeaderKeys(ByVal methodName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getReportHeaderKeys", New Object() {methodName}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndgetReportHeaderKeys(ByVal asyncResult As System.IAsyncResult) As KeyValue()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),KeyValue())
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("getThematicVariables", RequestNamespace:="v2", ResponseNamespace:="v2")>  _
        Public Function getThematicVariables(ByVal database As String, ByVal table As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> ThematicVariableInfo()
            Dim results() As Object = Me.Invoke("getThematicVariables", New Object() {database, table})
            Return CType(results(0),ThematicVariableInfo())
        End Function
        
        '<remarks/>
        Public Function BegingetThematicVariables(ByVal database As String, ByVal table As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getThematicVariables", New Object() {database, table}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndgetThematicVariables(ByVal asyncResult As System.IAsyncResult) As ThematicVariableInfo()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),ThematicVariableInfo())
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("searchThematicVariables", RequestNamespace:="v2", ResponseNamespace:="v2")>  _
        Public Function searchThematicVariables(ByVal keyword As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> ThematicVariableInfo()
            Dim results() As Object = Me.Invoke("searchThematicVariables", New Object() {keyword})
            Return CType(results(0),ThematicVariableInfo())
        End Function
        
        '<remarks/>
        Public Function BeginsearchThematicVariables(ByVal keyword As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("searchThematicVariables", New Object() {keyword}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndsearchThematicVariables(ByVal asyncResult As System.IAsyncResult) As ThematicVariableInfo()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),ThematicVariableInfo())
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("getMapReport", RequestNamespace:="v2", ResponseNamespace:="v2")>  _
        Public Function getMapReport(ByVal sites() As Site, ByVal reportOptions As ReportOptions, ByVal token As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> ReportInfo
            Dim results() As Object = Me.Invoke("getMapReport", New Object() {sites, reportOptions, token})
            Return CType(results(0),ReportInfo)
        End Function
        
        '<remarks/>
        Public Function BegingetMapReport(ByVal sites() As Site, ByVal reportOptions As ReportOptions, ByVal token As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getMapReport", New Object() {sites, reportOptions, token}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndgetMapReport(ByVal asyncResult As System.IAsyncResult) As ReportInfo
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),ReportInfo)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("getThematicMapReport", RequestNamespace:="v2", ResponseNamespace:="v2")>  _
        Public Function getThematicMapReport(ByVal sites() As Site, ByVal reportOptions As ReportOptions, ByVal thematicReportOptions As ThematicReportOptions, ByVal thematicVariable As String, ByVal token As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> ReportInfo
            Dim results() As Object = Me.Invoke("getThematicMapReport", New Object() {sites, reportOptions, thematicReportOptions, thematicVariable, token})
            Return CType(results(0),ReportInfo)
        End Function
        
        '<remarks/>
        Public Function BegingetThematicMapReport(ByVal sites() As Site, ByVal reportOptions As ReportOptions, ByVal thematicReportOptions As ThematicReportOptions, ByVal thematicVariable As String, ByVal token As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getThematicMapReport", New Object() {sites, reportOptions, thematicReportOptions, thematicVariable, token}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndgetThematicMapReport(ByVal asyncResult As System.IAsyncResult) As ReportInfo
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),ReportInfo)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("getSiteReports", RequestNamespace:="v2", ResponseNamespace:="v2")>  _
        Public Function getSiteReports(ByVal site As Site, ByVal reportOptions() As ReportOptions, ByVal combineReports As Boolean, ByVal token As String) As <System.Xml.Serialization.SoapElementAttribute("Result")> ReportInfo()
            Dim results() As Object = Me.Invoke("getSiteReports", New Object() {site, reportOptions, combineReports, token})
            Return CType(results(0),ReportInfo())
        End Function
        
        '<remarks/>
        Public Function BegingetSiteReports(ByVal site As Site, ByVal reportOptions() As ReportOptions, ByVal combineReports As Boolean, ByVal token As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getSiteReports", New Object() {site, reportOptions, combineReports, token}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndgetSiteReports(ByVal asyncResult As System.IAsyncResult) As ReportInfo()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),ReportInfo())
        End Function
    End Class
    
    '<remarks/>
    <System.Xml.Serialization.SoapTypeAttribute("ReportOptions", "http://www.themindelectric.com/package/com.esri.is.services.glue.v2.report/")>  _
    Public Class ReportOptions
        
        '<remarks/>
        Public dataSource As String
        
        '<remarks/>
        Public reportFormat As String
        
        '<remarks/>
        Public reportHeader() As KeyValue
    End Class
    
    '<remarks/>
    <System.Xml.Serialization.SoapTypeAttribute("KeyValue", "http://www.themindelectric.com/package/com.esri.is.services.common.v2/")>  _
    Public Class KeyValue
        
        '<remarks/>
        Public key As String
        
        '<remarks/>
        Public value As String
    End Class
    
    '<remarks/>
    <System.Xml.Serialization.SoapTypeAttribute("ThematicReportOptions", "http://www.themindelectric.com/package/com.esri.is.services.glue.v2.report/")>  _
    Public Class ThematicReportOptions
        
        '<remarks/>
        Public classificationMethod As String
        
        '<remarks/>
        Public geographyLevel As String
        
        '<remarks/>
        Public numberOfClasses As Integer
        
        '<remarks/>
        Public colorPalette As String
    End Class
    
    '<remarks/>
    <System.Xml.Serialization.SoapTypeAttribute("SimplePoint", "http://www.themindelectric.com/package/com.esri.is.services.common.v2.geom/")>  _
    Public Class SimplePoint
        
        '<remarks/>
        Public x As Double
        
        '<remarks/>
        Public y As Double
    End Class
    
    '<remarks/>
    <System.Xml.Serialization.SoapTypeAttribute("Geometry", "http://www.themindelectric.com/package/com.esri.is.services.common.v2.geom/")>  _
    Public Class Geometry
        
        '<remarks/>
        Public points() As SimplePoint
        
        '<remarks/>
        Public parts() As Integer
        
        '<remarks/>
        Public type As Integer
        
        '<remarks/>
        Public coordinateSystem As CoordinateSystem
    End Class
    
    '<remarks/>
    <System.Xml.Serialization.SoapTypeAttribute("CoordinateSystem", "http://www.themindelectric.com/package/com.esri.is.services.common.v2.geom/")>  _
    Public Class CoordinateSystem
        
        '<remarks/>
        Public projection As String
        
        '<remarks/>
        Public datumTransformation As String
    End Class
    
    '<remarks/>
    <System.Xml.Serialization.SoapTypeAttribute("Point", "http://www.themindelectric.com/package/com.esri.is.services.common.v2.geom/")>  _
    Public Class Point
        
        '<remarks/>
        Public x As Double
        
        '<remarks/>
        Public y As Double
        
        '<remarks/>
        Public coordinateSystem As CoordinateSystem
    End Class
    
    '<remarks/>
    <System.Xml.Serialization.SoapTypeAttribute("Site", "http://www.themindelectric.com/package/com.esri.is.services.glue.v2.report/")>  _
    Public Class Site
        
        '<remarks/>
        Public siteLocation As Point
        
        '<remarks/>
        Public siteName As String
        
        '<remarks/>
        Public ringRadii() As Double
        
        '<remarks/>
        Public calcType As String
        
        '<remarks/>
        Public ringUnits As String
        
        '<remarks/>
        Public polygons() As Geometry
    End Class
    
    '<remarks/>
    <System.Xml.Serialization.SoapTypeAttribute("ThematicVariableInfo", "http://www.themindelectric.com/package/com.esri.is.services.glue.v2.report/")>  _
    Public Class ThematicVariableInfo
        
        '<remarks/>
        Public database As String
        
        '<remarks/>
        Public table As String
        
        '<remarks/>
        Public variable As String
        
        '<remarks/>
        Public shortDesc As String
    End Class
    
    '<remarks/>
    <System.Xml.Serialization.SoapTypeAttribute("ReportInfo", "http://www.themindelectric.com/package/com.esri.is.services.glue.v2.report/")>  _
    Public Class ReportInfo
        
        '<remarks/>
        Public dataSource As String
        
        '<remarks/>
        Public reportUrl As String
        
        '<remarks/>
        Public reportFormat As String
    End Class
    
    '<remarks/>
    <System.Xml.Serialization.SoapTypeAttribute("StandardGeography", "http://www.themindelectric.com/package/com.esri.is.services.glue.v2.report/")>  _
    Public Class StandardGeography
        
        '<remarks/>
        Public geographyLevel As String
        
        '<remarks/>
        Public geographyIds() As String
    End Class
    
    '<remarks/>
    <System.Xml.Serialization.SoapTypeAttribute("RowData", "http://www.themindelectric.com/package/com.esri.is.services.common.v2/")>  _
    Public Class RowData
        
        '<remarks/>
        Public fieldValues() As String
    End Class
    
    '<remarks/>
    <System.Xml.Serialization.SoapTypeAttribute("ResultSet", "http://www.themindelectric.com/package/com.esri.is.services.common.v2/")>  _
    Public Class ResultSet
        
        '<remarks/>
        Public totalCount As Integer
        
        '<remarks/>
        Public fields() As FieldDesc
        
        '<remarks/>
        Public rows() As RowData
    End Class
    
    '<remarks/>
    <System.Xml.Serialization.SoapTypeAttribute("FieldDesc", "http://www.themindelectric.com/package/com.esri.is.services.common.v2/")>  _
    Public Class FieldDesc
        
        '<remarks/>
        Public fieldName As String
        
        '<remarks/>
        Public fieldType As String
        
        '<remarks/>
        Public fieldShortDesc As String
        
        '<remarks/>
        Public fieldLength As Integer
        
        '<remarks/>
        Public fieldPrecision As Integer
    End Class
    
    '<remarks/>
    <System.Xml.Serialization.SoapTypeAttribute("ResultSetRange", "http://www.themindelectric.com/package/com.esri.is.services.common.v2/")>  _
    Public Class ResultSetRange
        
        '<remarks/>
        Public startIndex As Integer
        
        '<remarks/>
        Public count As Integer
    End Class
    
    '<remarks/>
    <System.Xml.Serialization.SoapTypeAttribute("GeographyIdOptions", "http://www.themindelectric.com/package/com.esri.is.services.glue.v2.report/")>  _
    Public Class GeographyIdOptions
        
        '<remarks/>
        Public keyword As String
        
        '<remarks/>
        Public outputGeographyLevel As String
        
        '<remarks/>
        Public geographyIdFilter As String
        
        '<remarks/>
        Public resultSetRange As ResultSetRange
    End Class
End Namespace
